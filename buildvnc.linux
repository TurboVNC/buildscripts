set -u
set -e

SCRIPTDIR=`dirname $0`

if ls $OUTDIR/files/turbovnc-[0-9]*.x86_64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc-[0-9]*.aarch.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_amd64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_arm64.deb >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		>&2 echo
		>&2 echo Binary already exists!
		>&2 echo Run $SCRIPT -fb to rebuild it.
		>&2 echo
		exit 1
	else
		rm -f $OUTDIR/files/*.x86_64.rpm $OUTDIR/files/*.aarch64.rpm $OUTDIR/files/*.deb
	fi
fi

exec 2>&1

$SCRIPTDIR/openjdk.install
export JAVA_HOME=/opt/openjdk17
export PATH=/opt/openjdk17/bin:$PATH

echo Creating x86-64 binary RPM ...

mkdir -p rpmbuild/RPMS
mkdir -p rpmbuild/BUILD
mkdir -p rpmbuild/SRPMS
mkdir -p rpmbuild/buildroot

export CFLAGS=
export JAVAFLAGS='-target 1.8 -source 1.8 -Xlint:all,-serial,-cast,-unchecked,-rawtypes'
export LDFLAGS=
rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot --define "jre 1" \
	--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm
VERSION=`rpm -q -p rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm | cut -f2 -d-`
mv rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
mv rpmbuild/RPMS/x86_64/turbovnc-debuginfo-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm

if [ -f $SCRIPTDIR/gpgsign ]; then
	$SCRIPTDIR/rpmsign $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	rpm --checksig -v $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	$SCRIPTDIR/rpmsign $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
	rpm --checksig -v $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
fi

echo Creating amd64 binary DEB ...

rm -rf rpmbuild
pushd turbovnc-[0-9]*
mkdir linux64

pushd linux64
export CFLAGS=
export LDFLAGS=
export JAVA_HOME=/opt/openjdk17
$SCRIPTDIR/setupscripts/linux64
export NUMCPUS=`grep -c '^processor' /proc/cpuinfo`
make -j$NUMCPUS --load-average=$NUMCPUS
make deb
mv turbovnc_[0-9]*_amd64.deb $OUTDIR/files/
if [ -f $SCRIPTDIR/gpgsign ]; then
	. $SCRIPTDIR/gpgsign
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_amd64.deb
fi
popd

echo Creating AArch64 binary RPM and DEB ...

mkdir linux64.arm
pushd linux64.arm
$SCRIPTDIR/setupscripts/linux64.arm
make -j$NUMCPUS --load-average=$NUMCPUS
STRIP=/opt/gcc.arm64/bin/aarch64-none-linux-gnu-strip make rpm
VERSION=`rpm -q -p turbovnc-[0-9]*.aarch64.rpm | cut -f2 -d-`
mv turbovnc-[0-9]*.aarch64.rpm $OUTDIR/files/turbovnc-$VERSION.aarch64.rpm
if [ -f $SCRIPTDIR/gpgsign ]; then
	$SCRIPTDIR/rpmsign $OUTDIR/files/turbovnc-$VERSION.aarch64.rpm
	rpm --checksig -v $OUTDIR/files/turbovnc-$VERSION.aarch64.rpm
fi
make deb
mv turbovnc_[0-9]*_arm64.deb $OUTDIR/files/
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_arm64.deb
fi
popd

popd
