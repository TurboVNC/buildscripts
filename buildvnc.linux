set -u
set -e

SCRIPTDIR=`dirname $0`

if ls $OUTDIR/files/turbovnc-[0-9]*.i386.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc-[0-9]*.x86_64.rpm >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_amd64.deb >/dev/null 2>&1 \
	|| ls $OUTDIR/files/turbovnc*_[0-9]*_i386.deb >/dev/null 2>&1; then
	if [ $FORCEBINARY = 0 ]; then
		>&2 echo
		>&2 echo Binary already exists!
		>&2 echo Run $SCRIPT -fb to rebuild it.
		>&2 echo
		exit 1
	else
		rm -f $OUTDIR/files/*.i386.rpm $OUTDIR/files/*.x86_64.rpm $OUTDIR/files/*.deb
	fi
fi

if [ ! -f /opt/libjpeg-turbo-jni/ljtlinux32.jar ]; then
	>&2 echo ERROR: libjpeg-turbo JNI JAR files are not installed
	exit 1
fi
jar xf /opt/libjpeg-turbo-jni/ljtlinux32.jar libturbojpeg.so
if ! cmp libturbojpeg.so /opt/libjpeg-turbo/lib32/libturbojpeg.so; then
	>&2 echo ERROR: libjpeg-turbo JNI JAR files do not match the installed version
	exit 1
fi

exec 2>&1

. $SCRIPTDIR/setupscripts/jarvars

echo Creating binary RPMs ...

mkdir -p rpmbuild/RPMS
mkdir -p rpmbuild/BUILD
mkdir -p rpmbuild/SRPMS
mkdir -p rpmbuild/buildroot

export CFLAGS=
export JAVAFLAGS='-target 1.7 -source 1.7 -Xlint:all,-serial,-cast,-unchecked,-rawtypes'
export LDFLAGS=
if [ -n "$RPMARGS" ]; then
	rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot \
		--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm \
		"${RPMARGS[@]}"
else
	rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot \
		--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm
fi
VERSION=`rpm -q -p rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm | cut -f2 -d-`
mv rpmbuild/RPMS/x86_64/turbovnc-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
mv rpmbuild/RPMS/x86_64/turbovnc-debuginfo-[0-9]*.x86_64.rpm $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm

if [ -f $SCRIPTDIR/gpgsign ]; then
	. $SCRIPTDIR/gpgsign
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	rpm --checksig $OUTDIR/files/turbovnc-$VERSION.x86_64.rpm
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
	rpm --checksig $OUTDIR/files/turbovnc-debuginfo-$VERSION.x86_64.rpm
fi

export CFLAGS='-m32'
export LDFLAGS='-m32'
export JAVA_HOME=/usr/java/default32
if [ -n "$RPMARGS" ]; then
	rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot --target i386 \
		--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm \
		"${RPMARGS[@]}"
else
	rpmbuild --rebuild --buildroot $TMPDIR/rpmbuild/buildroot --target i386 \
		--define "_topdir $TMPDIR/rpmbuild" $OUTDIR/files/turbovnc-[0-9]*.src.rpm
fi
VERSION=`rpm -q -p rpmbuild/RPMS/i386/turbovnc-[0-9]*.i386.rpm | cut -f2 -d-`
mv rpmbuild/RPMS/i386/turbovnc-[0-9]*.i386.rpm $OUTDIR/files/turbovnc-$VERSION.i386.rpm
mv rpmbuild/RPMS/i386/turbovnc-debuginfo-[0-9]*.i386.rpm $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm
unset JAVAFLAGS

if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-$VERSION.i386.rpm
	rpm --checksig $OUTDIR/files/turbovnc-$VERSION.i386.rpm
	expect $SCRIPTDIR/rpmsign "$GPG_KEY_PASS" "$GPG_KEY_NAME" $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm
	rpm --checksig $OUTDIR/files/turbovnc-debuginfo-$VERSION.i386.rpm
fi

echo Creating binary DEBs ...

rm -rf rpmbuild
pushd turbovnc-[0-9]*
mkdir linux64 linux

pushd linux64
export CFLAGS=
export LDFLAGS=
export JAVA_HOME=
$SCRIPTDIR/setupscripts/linux64
export NUMCPUS=`grep -c '^processor' /proc/cpuinfo`
make -j$NUMCPUS --load-average=$NUMCPUS
make deb
mv turbovnc_[0-9]*_amd64.deb $OUTDIR/files/
jar cvf $OUTDIR/files/jni/tvnchelper-linux64.jar -C java libturbovnchelper.so
if [ ${#JARSIGNERARGS[@]} -gt 0 ]; then
	echo Signing $OUTDIR/files/jni/tvnchelper-linux64.jar using key $JAVA_KEY_ALIAS in keystore $JAVA_KEYSTORE
	jarsigner "${JARSIGNERARGS[@]}" $OUTDIR/files/jni/tvnchelper-linux64.jar "$JAVA_KEY_ALIAS"
fi
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_amd64.deb
fi
popd

pushd linux
$SCRIPTDIR/setupscripts/linux
make -j$NUMCPUS --load-average=$NUMCPUS
make deb
mv turbovnc_[0-9]*_i386.deb $OUTDIR/files/
jar cvf $OUTDIR/files/jni/tvnchelper-linux32.jar -C java libturbovnchelper.so
if [ ${#JARSIGNERARGS[@]} -gt 0 ]; then
	echo Signing $OUTDIR/files/jni/tvnchelper-linux32.jar using key $JAVA_KEY_ALIAS in keystore $JAVA_KEYSTORE
	jarsigner "${JARSIGNERARGS[@]}" $OUTDIR/files/jni/tvnchelper-linux32.jar "$JAVA_KEY_ALIAS"
fi
if [ -f $SCRIPTDIR/gpgsign ]; then
	expect $SCRIPTDIR/debsign "$GPG_KEY_PASS" "$GPG_KEY_ID" $OUTDIR/files/turbovnc_[0-9]*_i386.deb
fi
popd

popd
